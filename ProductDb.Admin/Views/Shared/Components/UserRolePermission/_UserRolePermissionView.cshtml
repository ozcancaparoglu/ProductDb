@inject CustomLocalizer localizer
@using ProductDb.Common.Enums
@model UserRolePermissionViewModel
<!-- Content Header (Page header) -->

<link href="~/Assets/dist/css/Loader.css" rel="stylesheet" />
<div id="cover-spin"></div>
<div class="row">

    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @localizer["Role"] @localizer["Permissions"]
                </div>
                @Html.HiddenFor(model => model.RoleId)
                <div class="panel-body">
                    <table id="userRoleList" class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>@localizer["Key"]</th>
                                <th>@localizer["Name"]</th>
                                <th>@localizer["Description"]</th>
                                <th>@localizer["Status"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.RolePermissionModels)
                            {
                                <tr>
                                    <td>@user.Permission.key</td>
                                    <td>@user.Permission.name</td>
                                    <td>@user.Permission.Description</td>
                                    <td>
                                        <a onclick="StateRolePermission(@user.Id)">
                                            @if (user.State == (int)State.Active)
                                            {
                                                <i class="fa fa-check fa-fw"></i> <span>@localizer["Active"]</span>
                                            }
                                            else
                                            {
                                                <i class="fa fa-close"></i> <span>@localizer["Passive"]</span>
                                            }
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-md-3">
            <button type="button" id="btnRoleSynchronization" class="btn btn-default">
                <span class="glyphicon glyphicon-refresh"></span>
            </button>
            <button type="button" id="btnAddRolePermission" class="btn btn-default">
                <span class="glyphicon glyphicon-plus-sign"></span> @localizer["Add"]
            </button>
            <button type="button" id="btnAddAllPermissionToRole" class="btn btn-default">
                <span class="glyphicon glyphicon glyphicon-ok"></span> @localizer["Apply"]
            </button>
        </div>
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.PermissionModel.Id, new SelectList(Model.PermissionModels,
                         "Id", "name"), "--Select--", new { @class = "form-control select2" })
        </div>

    </div>
</div>
<script>

    $(function () {

         var loader = $("#cover-spin");

        $("#userRoleList").kendoGrid({
            height: 550,
            filterable: {
               mode: "row"
            },
            pageable: true,
            dataSource: {
                pageSize: 20
            }
        });

        $(".select2").select2();

        var UserRole = $("#User_UserRoleId");
        var Permission = $("#PermissionModel_Id");

        $("#btnAddRolePermission").on("click", function () {
          
            var PermissionId = Permission.val();
            if (PermissionId == "") {
                return;
            }

            var roleId = $("#@Html.IdFor(model => model.RoleId)").val();
            var RoleData = {
                PermissionId: PermissionId,
                UserRoleId: roleId,
                Key: $("#" + Permission.attr('id') + " option:selected").text()
            };

            $.ajax({
                url: "/@localizer.CurrentLanguage/User/AddPermissionRole",
                dataType: "json",
                type: "POST",
                beforeSend: function () {
                    loader.show();
                },
                data: RoleData,
                success: function (response) {
                    if (response.status) {
                        GetUserRoles(roleId);
                    }
                },
                error: function (response) {
                    console.log(response);
                },
                complete: function () {
                    loader.hide();
                }
            })

        })

        $("#btnRoleSynchronization").on("click", function () {
            $.ajax({
                url: "/@localizer.CurrentLanguage/permission/synchronization",
                dataType: "json",
                type: "POST",
                beforeSend: function () {
                    loader.show();
                },
                success: function (response) {
                     if (response.status) {
                        alert("Synchronization Completed.");
                    }
                },
                error: function (response) {
                    console.log(response);
                },
                complete: function () {
                    loader.hide();
                }
            });
        });

        $("#btnAddAllPermissionToRole").on("click", function () {

            var loader = $("#cover-spin");
            var roleId = $("#@Html.IdFor(model => model.RoleId)").val();
            $.ajax({
                url: "/@localizer.CurrentLanguage/permission/AllpermissionToRole/" + roleId,
                type: "GET",
                dataType: "json",
                beforeSend: function () {
                    loader.show();
                },
                success: function (response) {
                if (response.status) {
                        GetUserRoles(roleId);
                    }
                },
                error: function (response) {
                    console.log(response.responseText);
                },
                complete: function () {
                    loader.hide();
                }
            })


        })
    })

    function StateRolePermission(id) {
        var loader = $("#cover-spin");
        var roleId = $("#@Html.IdFor(model => model.RoleId)").val();
        $.ajax({
            url: "/@localizer.CurrentLanguage/User/StateRolePermission/" + id,
            dataType: "json",
            beforeSend: function () {
                loader.show();
            },
            type: "GET",
            success: function (response) {
                if (response.status) {
                    GetUserRoles(roleId);
                }
            },
            error: function (response) {
                console.log(response.responseText);
            },
            complete: function () {
                loader.hide();
            }
        })
    }

</script>

