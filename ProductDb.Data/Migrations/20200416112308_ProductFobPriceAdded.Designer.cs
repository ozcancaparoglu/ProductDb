// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductDb.Data.BiggBrandsDb;

namespace ProductDb.Data.Migrations
{
    [DbContext(typeof(BiggBrandsDbContext))]
    [Migration("20200416112308_ProductFobPriceAdded")]
    partial class ProductFobPriceAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Attributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsRequired");

                    b.Property<bool>("IsVariantable");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.AttributesValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributesId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<string>("Unit");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId");

                    b.ToTable("AttributesValue");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Prefix")
                        .HasMaxLength(10);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsLastDesi");

                    b.Property<decimal>("MaxDesi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinDesi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<int?>("StoreId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.CargoType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("CargoType");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("ParentCategoryId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.CategoryAttributeMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributesId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsRequired");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributesId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryAttributeMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrevation")
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("LiveValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ErpCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ErpRef");

                    b.Property<string>("FirmName");

                    b.Property<int>("FirmNo");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ErpCompany");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Formula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("FormulaGroupId");

                    b.Property<string>("FormulaStr")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("Order");

                    b.Property<int>("ProcessedBy");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("FormulaGroupId");

                    b.ToTable("Formula");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.FormulaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("FormulaGroup");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbrevation")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDefault");

                    b.Property<string>("LogoPath")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.LanguageValues", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EntityId");

                    b.Property<string>("FieldName");

                    b.Property<int?>("LanguageId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<string>("TableName");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("LanguageValues");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Margin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EntityId");

                    b.Property<int?>("MarginTypeId");

                    b.Property<int>("ProcessedBy");

                    b.Property<decimal>("Profit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SecondEntityId");

                    b.Property<int?>("State");

                    b.Property<int?>("StoreId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MarginTypeId");

                    b.HasIndex("StoreId");

                    b.ToTable("Margin");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.MarginType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("Rank");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("MarginType");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ParentProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<int?>("CategoryId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("ProcessedBy");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Sku")
                        .IsRequired();

                    b.Property<int?>("State");

                    b.Property<int?>("SupplierId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ParentProduct");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Pictures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt");

                    b.Property<string>("CdnPath")
                        .IsRequired()
                        .HasMaxLength(5000);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("LocalPath")
                        .IsRequired()
                        .HasMaxLength(5000);

                    b.Property<int>("Order");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductId");

                    b.Property<int?>("State");

                    b.Property<string>("Title");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AbroadDesi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Alias");

                    b.Property<string>("Barcode")
                        .IsRequired();

                    b.Property<int?>("BrandId");

                    b.Property<decimal?>("BuyingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CorporateCurrencyId");

                    b.Property<decimal?>("CorporatePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CurrencyId");

                    b.Property<int?>("DdpCurrencyId");

                    b.Property<decimal?>("DdpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description");

                    b.Property<decimal?>("Desi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ExpireDate");

                    b.Property<int?>("FobCurrencyId");

                    b.Property<decimal?>("FobPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Gtip");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeywords");

                    b.Property<string>("MetaTitle");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentProductId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductGroupId");

                    b.Property<int?>("PsfCurrencyId");

                    b.Property<decimal?>("PsfPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SearchEngineTerms");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Sku")
                        .IsRequired();

                    b.Property<int?>("State");

                    b.Property<int?>("SupplierId");

                    b.Property<int?>("SupplierUniqueId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("VatRateId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CorporateCurrencyId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DdpCurrencyId");

                    b.HasIndex("FobCurrencyId");

                    b.HasIndex("ParentProductId");

                    b.HasIndex("ProductGroupId");

                    b.HasIndex("PsfCurrencyId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VatRateId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductAttributeMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AttributeValueId");

                    b.Property<int?>("AttributesId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsRequired");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductId");

                    b.Property<string>("RequiredAttributeValue");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AttributeValueId");

                    b.HasIndex("AttributesId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAttributeMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductAttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attribute");

                    b.Property<string>("AttributeValue");

                    b.Property<int?>("AttributeValueId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("ProductId");

                    b.Property<int?>("State");

                    b.Property<string>("Unit");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ProductAttributeValue");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductBuyingPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductId");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBuyingPriceHistory");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ParentProductDock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductDockCategoryId");

                    b.Property<string>("Sku")
                        .IsRequired();

                    b.Property<int?>("State");

                    b.Property<int?>("SupplierId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductDockCategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ParentProductDock");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<string>("BulletPoint1");

                    b.Property<string>("BulletPoint2");

                    b.Property<string>("BulletPoint3");

                    b.Property<string>("BulletPoint4");

                    b.Property<string>("BulletPoint5");

                    b.Property<decimal?>("CorporatePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CurrencyId");

                    b.Property<decimal?>("Desi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FullDescription");

                    b.Property<string>("Gtin");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MetaDescription");

                    b.Property<string>("MetaKeywords");

                    b.Property<string>("MetaTitle");

                    b.Property<string>("Model");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentProductDockId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductDockCategoryId");

                    b.Property<decimal?>("PsfPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShortDescription");

                    b.Property<string>("Sku");

                    b.Property<int?>("State");

                    b.Property<int>("Stock");

                    b.Property<int?>("SupplierId");

                    b.Property<int?>("SupplierUniqueId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("VatRateId");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ParentProductDockId");

                    b.HasIndex("ProductDockCategoryId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VatRateId");

                    b.ToTable("ProductDock");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("ProductDockId");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ProductDockId");

                    b.ToTable("ProductDockAttribute");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("ParentCategoryId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<int?>("SupplierId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("ProductDockCategory");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockPictures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DownloadUrl");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductDockId");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ProductDockId");

                    b.ToTable("ProductDockPictures");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductErpCompanyMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ErpCompanyId");

                    b.Property<string>("Message");

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("ProductId");

                    b.Property<int?>("State");

                    b.Property<bool>("Status");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ErpCompanyId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductErpCompanyMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ProductGroup");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BaseId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ParentProductId");

                    b.Property<int>("ProcessedBy");

                    b.Property<string>("ProductAttributes");

                    b.Property<int>("ProductId");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("ParentProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariant");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("PermissionId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("UserRoleId");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("RolePermission");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CargoCurrencyId");

                    b.Property<int?>("CargoTypeId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CurrencyId");

                    b.Property<decimal?>("DefaultMarj")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ErpCompanyId");

                    b.Property<int?>("FormulaGroupId");

                    b.Property<decimal?>("MaxPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxStock");

                    b.Property<decimal?>("MinPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MinPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinStock");

                    b.Property<string>("Name");

                    b.Property<int>("ProcessedBy");

                    b.Property<string>("ProjectCode");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Sarf")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CargoCurrencyId");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ErpCompanyId");

                    b.HasIndex("FormulaGroupId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreCategoryMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ErpCategoryId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<int>("StoreId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreCategoryMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreProductMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseStoreId");

                    b.Property<string>("CatalogCode");

                    b.Property<string>("CatalogName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal?>("ErpPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ErpPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsFixed");

                    b.Property<bool?>("IsFixedPoint");

                    b.Property<bool>("IsRealStock");

                    b.Property<bool?>("IsSend");

                    b.Property<decimal?>("Point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("ProductId");

                    b.Property<int?>("State");

                    b.Property<int>("Stock");

                    b.Property<string>("StoreCategory");

                    b.Property<int?>("StoreId");

                    b.Property<int>("StoreParentProductId");

                    b.Property<int>("StoreProductId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("VatValue");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreProductMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreWarehouseMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<int?>("StoreId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("WarehouseTypeId");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("WarehouseTypeId");

                    b.ToTable("StoreWarehouseMapping");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ManufacturerPartNumber")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("Prefix")
                        .HasMaxLength(100);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Transportation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CurrencyId");

                    b.Property<int?>("EntityId");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<int?>("StoreId");

                    b.Property<int?>("TransportationTypeId");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TransportationTypeId");

                    b.ToTable("Transportation");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.TransportationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("Rank");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("TransportationType");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(750);

                    b.Property<byte[]>("Password");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("UserRoleId");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(750);

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(750);

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.VatRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.ToTable("VatRate");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.WarehouseProductStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Name");

                    b.Property<int>("ProcessedBy");

                    b.Property<int>("ProductId");

                    b.Property<double>("Quantity");

                    b.Property<string>("Sku");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("WarehouseTypeId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseTypeId");

                    b.ToTable("WarehouseProductStock");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.WarehouseQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("ProcessedBy");

                    b.Property<string>("Query");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("WarehouseName");

                    b.Property<int>("WarehouseTypeId");

                    b.HasKey("Id");

                    b.ToTable("WarehouseQuery");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.WarehouseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("LogoWarehouseId");

                    b.Property<string>("Name");

                    b.Property<int>("ProcessedBy");

                    b.Property<int?>("State");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("WarehouseType");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.AttributesValue", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Attributes", "Attributes")
                        .WithMany("AttributesValues")
                        .HasForeignKey("AttributesId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Cargo", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.CategoryAttributeMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Attributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Formula", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.FormulaGroup", "FormulaGroup")
                        .WithMany()
                        .HasForeignKey("FormulaGroupId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.LanguageValues", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Margin", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.MarginType", "MarginType")
                        .WithMany()
                        .HasForeignKey("MarginTypeId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ParentProduct", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Brand", "BrandPP")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Supplier", "SupplierPP")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Pictures", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany("Pictures")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Product", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "CorporateCurrency")
                        .WithMany()
                        .HasForeignKey("CorporateCurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "DdpCurrency")
                        .WithMany()
                        .HasForeignKey("DdpCurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "FobCurrency")
                        .WithMany()
                        .HasForeignKey("FobCurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.ParentProduct", "ParentProduct")
                        .WithMany("Products")
                        .HasForeignKey("ParentProductId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductGroup", "ProductGroup")
                        .WithMany()
                        .HasForeignKey("ProductGroupId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "PsfCurrency")
                        .WithMany()
                        .HasForeignKey("PsfCurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.VatRate", "VatRate")
                        .WithMany()
                        .HasForeignKey("VatRateId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductAttributeMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.AttributesValue", "AttributesValue")
                        .WithMany()
                        .HasForeignKey("AttributeValueId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Attributes", "Attributes")
                        .WithMany()
                        .HasForeignKey("AttributesId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany("ProductAttributeMappings")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductBuyingPriceHistory", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ParentProductDock", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockCategory", "Category")
                        .WithMany()
                        .HasForeignKey("ProductDockCategoryId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDock", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductDocks.ParentProductDock", "ParentProductDock")
                        .WithMany("Products")
                        .HasForeignKey("ParentProductDockId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockCategory", "ProductDockCategory")
                        .WithMany()
                        .HasForeignKey("ProductDockCategoryId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.VatRate", "VatRate")
                        .WithMany()
                        .HasForeignKey("VatRateId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockAttribute", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDock", "ProductDock")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductDockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockCategory", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDockPictures", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.ProductDocks.ProductDock", "ProductDock")
                        .WithMany("Pictures")
                        .HasForeignKey("ProductDockId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductErpCompanyMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.ErpCompany", "ErpCompany")
                        .WithMany()
                        .HasForeignKey("ErpCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.ProductVariant", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.ParentProduct", "ParentProduct")
                        .WithMany()
                        .HasForeignKey("ParentProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.RolePermission", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductDb.Data.BiggBrandsDb.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Store", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "CargoCurrency")
                        .WithMany()
                        .HasForeignKey("CargoCurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.CargoType", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.ErpCompany", "ErpCompany")
                        .WithMany()
                        .HasForeignKey("ErpCompanyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.FormulaGroup", "FormulaGroup")
                        .WithMany()
                        .HasForeignKey("FormulaGroupId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreCategoryMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreProductMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.StoreWarehouseMapping", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.WarehouseType", "WarehouseType")
                        .WithMany()
                        .HasForeignKey("WarehouseTypeId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.Transportation", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId");

                    b.HasOne("ProductDb.Data.BiggBrandsDb.TransportationType", "TransportationType")
                        .WithMany()
                        .HasForeignKey("TransportationTypeId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.User", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");
                });

            modelBuilder.Entity("ProductDb.Data.BiggBrandsDb.WarehouseProductStock", b =>
                {
                    b.HasOne("ProductDb.Data.BiggBrandsDb.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProductDb.Data.BiggBrandsDb.WarehouseType", "WarehouseType")
                        .WithMany()
                        .HasForeignKey("WarehouseTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
